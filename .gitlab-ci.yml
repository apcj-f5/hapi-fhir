image: tmaier/docker-compose:latest

services:
  - docker:dind

stages:
  - build
  - test
  - deploy
  - staging
  - prod

build-code:
  stage: build
  script:
   - docker-compose up -d --build
  allow_failure: false

unit-test-code:
  stage: test
  script:
    - echo "This is the test step"

functional-test:
  stage: staging
  script:
    - docker pull postman/newman
    - docker run --user $(id -u):$(id -g) -v $(pwd)/postman:/etc/newman -t postman/newman run postman_collection.json -e postman_environment.json --insecure
  allow_failure: false

dast-tool_zap-basic:
  stage: staging
  script:
    - docker pull owasp/zap2docker-stable
    - docker run --user $(id -u):$(id -g) -w /zap -v $(pwd):/zap/wrk:rw --rm owasp/zap2docker-weekly zap-baseline.py -t https://hapi.f5labs.dev:8080/fhir -J dast-tool_zap_baseline_scan-results.json
  rules: 
    - if: $DAST != "full"
      when: always
  after_script:
    - docker rmi owasp/zap2docker-stable  # clean up the image to save the disk space
  artifacts:
    paths: [dast-tool_zap_baseline_scan-results.json]
    when: always
    expire_in: one week
  allow_failure: false

deploy_to_prod:
  stage: prod
  script:
    - echo "This is a deploy step"
  when: always # Continuous Deployment

dast-tool_zap-full:
  stage: deploy
  script:
    - docker pull owasp/zap2docker-stable
    - docker run --user $(id -u):$(id -g) -w /zap -v $(pwd):/zap/wrk:rw --rm owasp/zap2docker-weekly zap-full-scan.py -t https://hapi.f5labs.dev:8080/fhir -J dast-tool_zap_full_scan-results.json
  rules: 
    - if: $DAST == "full"
      when: always
  after_script:
    - docker rmi owasp/zap2docker-stable  # clean up the image to save the disk space
  artifacts:
    paths: [dast-tool_zap_full_scan-results.json]
    when: always
    expire_in: one week
  allow_failure: false
